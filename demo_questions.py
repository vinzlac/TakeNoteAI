#!/usr/bin/env python3
"""
Script de d√©monstration pour tester diff√©rentes questions sur l'audio
"""

import subprocess
import sys
from pathlib import Path

def run_question(json_file: str, question: str, title: str = None):
    """Lance une question et affiche le r√©sultat."""
    if title:
        print(f"\n{'='*60}")
        print(f"üéØ {title}")
        print(f"{'='*60}")
    
    try:
        result = subprocess.run([
            sys.executable, "simple_audio_analyzer.py", 
            json_file, "--question", question
        ], capture_output=True, text=True, encoding='utf-8')
        
        if result.returncode == 0:
            print(result.stdout)
        else:
            print(f"‚ùå Erreur: {result.stderr}")
    
    except Exception as e:
        print(f"‚ùå Erreur lors de l'ex√©cution: {e}")

def main():
    """Fonction principale de d√©monstration."""
    # Fichier JSON √† analyser
    json_file = "test_output_1_advanced_rag_20251003_214507.json"
    
    if not Path(json_file).exists():
        print(f"‚ùå Le fichier {json_file} n'existe pas")
        print("üí° Assurez-vous d'avoir trait√© l'audio avec le script RAG avanc√©")
        return 1
    
    print("üöÄ D√©monstration de l'analyseur de questions audio")
    print(f"üìÅ Fichier analys√©: {json_file}")
    
    # Questions de d√©monstration
    questions = [
        ("Quels risques sont identifi√©s ?", "ANALYSE DES RISQUES"),
        ("Quelles actions doivent √™tre prises ?", "ANALYSE DES ACTIONS"),
        ("Qui fait partie de l'√©quipe ?", "INFORMATIONS SUR L'√âQUIPE"),
        ("Quels sont les d√©lais et √©ch√©ances ?", "ANALYSE TEMPORELLE"),
        ("Quel est l'√©tat de l'architecture ?", "ANALYSE DE L'ARCHITECTURE"),
        ("Quels sont les standards mentionn√©s ?", "ANALYSE DES STANDARDS")
    ]
    
    for question, title in questions:
        run_question(json_file, question, title)
    
    print(f"\n{'='*60}")
    print("‚úÖ D√©monstration termin√©e!")
    print("üí° Vous pouvez utiliser le script simple_audio_analyzer.py avec vos propres questions")
    print(f"{'='*60}")
    
    return 0

if __name__ == "__main__":
    exit(main())
